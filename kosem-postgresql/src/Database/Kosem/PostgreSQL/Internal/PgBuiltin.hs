{-# LANGUAGE DuplicateRecordFields #-}
{-# LANGUAGE OverloadedRecordDot #-}
{-# LANGUAGE PatternSynonyms #-}
{-# LANGUAGE TemplateHaskellQuotes #-}

module Database.Kosem.PostgreSQL.Internal.PgBuiltin where

import Data.Scientific (Scientific)
import Data.Text (Text)
import Database.Kosem.PostgreSQL.Internal.PgType qualified as PgType
import Database.Kosem.PostgreSQL.Internal.TypCategory qualified as TypCategory
import Database.Kosem.PostgreSQL.Internal.Types
import Language.Haskell.TH (Name)

data DatabaseConfig = DatabaseConfig
    { types :: [(Identifier, PgType)]
    , typesToHs :: [(PgType, Name)]
    , casts :: [PgCast]
    , binaryOperators :: [(Operator, PgType, PgType, PgType)]
    , unaryOperators :: [(Operator, PgType, PgType)]
    , confFunctions :: [(Identifier, [PgType], PgType)]
    }

defaultDatabaseConfig :: DatabaseConfig
defaultDatabaseConfig =
    DatabaseConfig
        { types =
            [ ("text", PgType.Text)
            , ("integer", PgType.Integer)
            , ("smallint", PgType.Smallint)
            , ("bigint", PgType.Bigint)
            , ("numeric", PgType.Numeric)
            , ("boolean", PgType.Boolean)
            ]
        , typesToHs =
            [ (PgType.Text, ''Text)
            , (PgType.Integer, ''Int)
            , (PgType.Smallint, ''Int)
            , (PgType.Bigint, ''Int)
            , (PgType.Boolean, ''Bool)
            , (PgType.Numeric, ''Scientific)
            ]
        , casts = pgCast
        , binaryOperators = pgbinaryOperators
        , unaryOperators = pgUnaryOperators
        , confFunctions = pgFunctions
        }

-- * Operators

pgbinaryOperators :: [(Operator, PgType, PgType, PgType)]
pgbinaryOperators =
    {- Generated by this query:
         ```sql
         with kosem_types as (
             select *
               from (values
               ('integer'), ('bigint'), ('text'),
             (  'boolean'), ('numeric'), ('unkwnown')) as ty
         ), gpt_rank (gpt_rank, op) as (
         -- We order operators by their usage ranking, courtesy of ChatGPT.
             select row_number() over (), *
               from (values
             ('='), ('<>'), ('<'), ('<='), ('>'), ('>='),
             ('+'), ('-'), ('*'), ('/'), ('%'), ('&'),
             ('|'), ('#'), ('||'), ('->'), ('->>'), ('#>'),
             ('#>>'), ('@>'), ('<@')) as op
         ), bin_operators as (
             select * from (
                 select
                     o.oprname AS operator_name,
                     pg_catalog.format_type(o.oprleft, NULL) AS left_type,
                     pg_catalog.format_type(o.oprright, NULL) AS right_type,
                     pg_catalog.format_type(o.oprresult, NULL) AS result_type
                   from pg_catalog.pg_operator o
                   left join pg_catalog.pg_type t ON o.oprresult = t.oid
             ) _
               left join gpt_rank on op = operator_name
              where left_type in (select * from kosem_types)
                and right_type in (select * from kosem_types)
                and result_type in (select * from kosem_types)
              order by
              coalesce(gpt_rank, 99), result_type, operator_name, left_type, right_type
         )
         select '    ' || ', ("' || operator_name || '", '
             || 'Pg' || initcap(left_type) || ', '
             || 'Pg' || initcap(right_type) || ', '
             || 'Pg' || initcap(result_type) || ')'
           from bin_operators;
         ```
    -}
    [ ("=", PgType.Bigint, PgType.Bigint, PgType.Boolean)
    , ("=", PgType.Bigint, PgType.Integer, PgType.Boolean)
    , ("=", PgType.Bigint, PgType.Smallint, PgType.Boolean)
    , ("=", PgType.Boolean, PgType.Boolean, PgType.Boolean)
    , ("=", PgType.Character, PgType.Character, PgType.Boolean)
    , ("=", PgType.DoublePrecision, PgType.DoublePrecision, PgType.Boolean)
    , ("=", PgType.DoublePrecision, PgType.Real, PgType.Boolean)
    , ("=", PgType.Integer, PgType.Bigint, PgType.Boolean)
    , ("=", PgType.Integer, PgType.Integer, PgType.Boolean)
    , ("=", PgType.Integer, PgType.Smallint, PgType.Boolean)
    , ("=", PgType.Numeric, PgType.Numeric, PgType.Boolean)
    , ("=", PgType.Real, PgType.DoublePrecision, PgType.Boolean)
    , ("=", PgType.Real, PgType.Real, PgType.Boolean)
    , ("=", PgType.Smallint, PgType.Bigint, PgType.Boolean)
    , ("=", PgType.Smallint, PgType.Integer, PgType.Boolean)
    , ("=", PgType.Smallint, PgType.Smallint, PgType.Boolean)
    , ("=", PgType.Text, PgType.Text, PgType.Boolean)
    , ("<>", PgType.Bigint, PgType.Bigint, PgType.Boolean)
    , ("<>", PgType.Bigint, PgType.Integer, PgType.Boolean)
    , ("<>", PgType.Bigint, PgType.Smallint, PgType.Boolean)
    , ("<>", PgType.Boolean, PgType.Boolean, PgType.Boolean)
    , ("<>", PgType.Character, PgType.Character, PgType.Boolean)
    , ("<>", PgType.DoublePrecision, PgType.DoublePrecision, PgType.Boolean)
    , ("<>", PgType.DoublePrecision, PgType.Real, PgType.Boolean)
    , ("<>", PgType.Integer, PgType.Bigint, PgType.Boolean)
    , ("<>", PgType.Integer, PgType.Integer, PgType.Boolean)
    , ("<>", PgType.Integer, PgType.Smallint, PgType.Boolean)
    , ("<>", PgType.Numeric, PgType.Numeric, PgType.Boolean)
    , ("<>", PgType.Real, PgType.DoublePrecision, PgType.Boolean)
    , ("<>", PgType.Real, PgType.Real, PgType.Boolean)
    , ("<>", PgType.Smallint, PgType.Bigint, PgType.Boolean)
    , ("<>", PgType.Smallint, PgType.Integer, PgType.Boolean)
    , ("<>", PgType.Smallint, PgType.Smallint, PgType.Boolean)
    , ("<>", PgType.Text, PgType.Text, PgType.Boolean)
    , ("<", PgType.Bigint, PgType.Bigint, PgType.Boolean)
    , ("<", PgType.Bigint, PgType.Integer, PgType.Boolean)
    , ("<", PgType.Bigint, PgType.Smallint, PgType.Boolean)
    , ("<", PgType.Boolean, PgType.Boolean, PgType.Boolean)
    , ("<", PgType.Character, PgType.Character, PgType.Boolean)
    , ("<", PgType.DoublePrecision, PgType.DoublePrecision, PgType.Boolean)
    , ("<", PgType.DoublePrecision, PgType.Real, PgType.Boolean)
    , ("<", PgType.Integer, PgType.Bigint, PgType.Boolean)
    , ("<", PgType.Integer, PgType.Integer, PgType.Boolean)
    , ("<", PgType.Integer, PgType.Smallint, PgType.Boolean)
    , ("<", PgType.Numeric, PgType.Numeric, PgType.Boolean)
    , ("<", PgType.Real, PgType.DoublePrecision, PgType.Boolean)
    , ("<", PgType.Real, PgType.Real, PgType.Boolean)
    , ("<", PgType.Smallint, PgType.Bigint, PgType.Boolean)
    , ("<", PgType.Smallint, PgType.Integer, PgType.Boolean)
    , ("<", PgType.Smallint, PgType.Smallint, PgType.Boolean)
    , ("<", PgType.Text, PgType.Text, PgType.Boolean)
    , ("<=", PgType.Bigint, PgType.Bigint, PgType.Boolean)
    , ("<=", PgType.Bigint, PgType.Integer, PgType.Boolean)
    , ("<=", PgType.Bigint, PgType.Smallint, PgType.Boolean)
    , ("<=", PgType.Boolean, PgType.Boolean, PgType.Boolean)
    , ("<=", PgType.Character, PgType.Character, PgType.Boolean)
    , ("<=", PgType.DoublePrecision, PgType.DoublePrecision, PgType.Boolean)
    , ("<=", PgType.DoublePrecision, PgType.Real, PgType.Boolean)
    , ("<=", PgType.Integer, PgType.Bigint, PgType.Boolean)
    , ("<=", PgType.Integer, PgType.Integer, PgType.Boolean)
    , ("<=", PgType.Integer, PgType.Smallint, PgType.Boolean)
    , ("<=", PgType.Numeric, PgType.Numeric, PgType.Boolean)
    , ("<=", PgType.Real, PgType.DoublePrecision, PgType.Boolean)
    , ("<=", PgType.Real, PgType.Real, PgType.Boolean)
    , ("<=", PgType.Smallint, PgType.Bigint, PgType.Boolean)
    , ("<=", PgType.Smallint, PgType.Integer, PgType.Boolean)
    , ("<=", PgType.Smallint, PgType.Smallint, PgType.Boolean)
    , ("<=", PgType.Text, PgType.Text, PgType.Boolean)
    , (">", PgType.Bigint, PgType.Bigint, PgType.Boolean)
    , (">", PgType.Bigint, PgType.Integer, PgType.Boolean)
    , (">", PgType.Bigint, PgType.Smallint, PgType.Boolean)
    , (">", PgType.Boolean, PgType.Boolean, PgType.Boolean)
    , (">", PgType.Character, PgType.Character, PgType.Boolean)
    , (">", PgType.DoublePrecision, PgType.DoublePrecision, PgType.Boolean)
    , (">", PgType.DoublePrecision, PgType.Real, PgType.Boolean)
    , (">", PgType.Integer, PgType.Bigint, PgType.Boolean)
    , (">", PgType.Integer, PgType.Integer, PgType.Boolean)
    , (">", PgType.Integer, PgType.Smallint, PgType.Boolean)
    , (">", PgType.Numeric, PgType.Numeric, PgType.Boolean)
    , (">", PgType.Real, PgType.DoublePrecision, PgType.Boolean)
    , (">", PgType.Real, PgType.Real, PgType.Boolean)
    , (">", PgType.Smallint, PgType.Bigint, PgType.Boolean)
    , (">", PgType.Smallint, PgType.Integer, PgType.Boolean)
    , (">", PgType.Smallint, PgType.Smallint, PgType.Boolean)
    , (">", PgType.Text, PgType.Text, PgType.Boolean)
    , (">=", PgType.Bigint, PgType.Bigint, PgType.Boolean)
    , (">=", PgType.Bigint, PgType.Integer, PgType.Boolean)
    , (">=", PgType.Bigint, PgType.Smallint, PgType.Boolean)
    , (">=", PgType.Boolean, PgType.Boolean, PgType.Boolean)
    , (">=", PgType.Character, PgType.Character, PgType.Boolean)
    , (">=", PgType.DoublePrecision, PgType.DoublePrecision, PgType.Boolean)
    , (">=", PgType.DoublePrecision, PgType.Real, PgType.Boolean)
    , (">=", PgType.Integer, PgType.Bigint, PgType.Boolean)
    , (">=", PgType.Integer, PgType.Integer, PgType.Boolean)
    , (">=", PgType.Integer, PgType.Smallint, PgType.Boolean)
    , (">=", PgType.Numeric, PgType.Numeric, PgType.Boolean)
    , (">=", PgType.Real, PgType.DoublePrecision, PgType.Boolean)
    , (">=", PgType.Real, PgType.Real, PgType.Boolean)
    , (">=", PgType.Smallint, PgType.Bigint, PgType.Boolean)
    , (">=", PgType.Smallint, PgType.Integer, PgType.Boolean)
    , (">=", PgType.Smallint, PgType.Smallint, PgType.Boolean)
    , (">=", PgType.Text, PgType.Text, PgType.Boolean)
    , ("+", PgType.Bigint, PgType.Bigint, PgType.Bigint)
    , ("+", PgType.Bigint, PgType.Integer, PgType.Bigint)
    , ("+", PgType.Bigint, PgType.Smallint, PgType.Bigint)
    , ("+", PgType.Integer, PgType.Bigint, PgType.Bigint)
    , ("+", PgType.Smallint, PgType.Bigint, PgType.Bigint)
    , ("+", PgType.DoublePrecision, PgType.DoublePrecision, PgType.DoublePrecision)
    , ("+", PgType.DoublePrecision, PgType.Real, PgType.DoublePrecision)
    , ("+", PgType.Real, PgType.DoublePrecision, PgType.DoublePrecision)
    , ("+", PgType.Integer, PgType.Integer, PgType.Integer)
    , ("+", PgType.Integer, PgType.Smallint, PgType.Integer)
    , ("+", PgType.Smallint, PgType.Integer, PgType.Integer)
    , ("+", PgType.Numeric, PgType.Numeric, PgType.Numeric)
    , ("+", PgType.Real, PgType.Real, PgType.Real)
    , ("+", PgType.Smallint, PgType.Smallint, PgType.Smallint)
    , ("-", PgType.Bigint, PgType.Bigint, PgType.Bigint)
    , ("-", PgType.Bigint, PgType.Integer, PgType.Bigint)
    , ("-", PgType.Bigint, PgType.Smallint, PgType.Bigint)
    , ("-", PgType.Integer, PgType.Bigint, PgType.Bigint)
    , ("-", PgType.Smallint, PgType.Bigint, PgType.Bigint)
    , ("-", PgType.DoublePrecision, PgType.DoublePrecision, PgType.DoublePrecision)
    , ("-", PgType.DoublePrecision, PgType.Real, PgType.DoublePrecision)
    , ("-", PgType.Real, PgType.DoublePrecision, PgType.DoublePrecision)
    , ("-", PgType.Integer, PgType.Integer, PgType.Integer)
    , ("-", PgType.Integer, PgType.Smallint, PgType.Integer)
    , ("-", PgType.Smallint, PgType.Integer, PgType.Integer)
    , ("-", PgType.Numeric, PgType.Numeric, PgType.Numeric)
    , ("-", PgType.Real, PgType.Real, PgType.Real)
    , ("-", PgType.Smallint, PgType.Smallint, PgType.Smallint)
    , ("*", PgType.Bigint, PgType.Bigint, PgType.Bigint)
    , ("*", PgType.Bigint, PgType.Integer, PgType.Bigint)
    , ("*", PgType.Bigint, PgType.Smallint, PgType.Bigint)
    , ("*", PgType.Integer, PgType.Bigint, PgType.Bigint)
    , ("*", PgType.Smallint, PgType.Bigint, PgType.Bigint)
    , ("*", PgType.DoublePrecision, PgType.DoublePrecision, PgType.DoublePrecision)
    , ("*", PgType.DoublePrecision, PgType.Real, PgType.DoublePrecision)
    , ("*", PgType.Real, PgType.DoublePrecision, PgType.DoublePrecision)
    , ("*", PgType.Integer, PgType.Integer, PgType.Integer)
    , ("*", PgType.Integer, PgType.Smallint, PgType.Integer)
    , ("*", PgType.Smallint, PgType.Integer, PgType.Integer)
    , ("*", PgType.Numeric, PgType.Numeric, PgType.Numeric)
    , ("*", PgType.Real, PgType.Real, PgType.Real)
    , ("*", PgType.Smallint, PgType.Smallint, PgType.Smallint)
    , ("/", PgType.Bigint, PgType.Bigint, PgType.Bigint)
    , ("/", PgType.Bigint, PgType.Integer, PgType.Bigint)
    , ("/", PgType.Bigint, PgType.Smallint, PgType.Bigint)
    , ("/", PgType.Integer, PgType.Bigint, PgType.Bigint)
    , ("/", PgType.Smallint, PgType.Bigint, PgType.Bigint)
    , ("/", PgType.DoublePrecision, PgType.DoublePrecision, PgType.DoublePrecision)
    , ("/", PgType.DoublePrecision, PgType.Real, PgType.DoublePrecision)
    , ("/", PgType.Real, PgType.DoublePrecision, PgType.DoublePrecision)
    , ("/", PgType.Integer, PgType.Integer, PgType.Integer)
    , ("/", PgType.Integer, PgType.Smallint, PgType.Integer)
    , ("/", PgType.Smallint, PgType.Integer, PgType.Integer)
    , ("/", PgType.Numeric, PgType.Numeric, PgType.Numeric)
    , ("/", PgType.Real, PgType.Real, PgType.Real)
    , ("/", PgType.Smallint, PgType.Smallint, PgType.Smallint)
    , ("%", PgType.Bigint, PgType.Bigint, PgType.Bigint)
    , ("%", PgType.Integer, PgType.Integer, PgType.Integer)
    , ("%", PgType.Numeric, PgType.Numeric, PgType.Numeric)
    , ("%", PgType.Smallint, PgType.Smallint, PgType.Smallint)
    , ("&", PgType.Bigint, PgType.Bigint, PgType.Bigint)
    , ("&", PgType.Integer, PgType.Integer, PgType.Integer)
    , ("&", PgType.Smallint, PgType.Smallint, PgType.Smallint)
    , ("|", PgType.Bigint, PgType.Bigint, PgType.Bigint)
    , ("|", PgType.Integer, PgType.Integer, PgType.Integer)
    , ("|", PgType.Smallint, PgType.Smallint, PgType.Smallint)
    , ("#", PgType.Bigint, PgType.Bigint, PgType.Bigint)
    , ("#", PgType.Integer, PgType.Integer, PgType.Integer)
    , ("#", PgType.Smallint, PgType.Smallint, PgType.Smallint)
    , ("||", PgType.Text, PgType.Text, PgType.Text)
    , ("<<", PgType.Bigint, PgType.Integer, PgType.Bigint)
    , (">>", PgType.Bigint, PgType.Integer, PgType.Bigint)
    , ("!~", PgType.Character, PgType.Text, PgType.Boolean)
    , ("!~", PgType.Text, PgType.Text, PgType.Boolean)
    , ("!~*", PgType.Character, PgType.Text, PgType.Boolean)
    , ("!~*", PgType.Text, PgType.Text, PgType.Boolean)
    , ("!~~", PgType.Character, PgType.Text, PgType.Boolean)
    , ("!~~", PgType.Text, PgType.Text, PgType.Boolean)
    , ("!~~*", PgType.Character, PgType.Text, PgType.Boolean)
    , ("!~~*", PgType.Text, PgType.Text, PgType.Boolean)
    , ("@@", PgType.Text, PgType.Text, PgType.Boolean)
    , ("^@", PgType.Text, PgType.Text, PgType.Boolean)
    , ("~", PgType.Character, PgType.Text, PgType.Boolean)
    , ("~", PgType.Text, PgType.Text, PgType.Boolean)
    , ("~*", PgType.Character, PgType.Text, PgType.Boolean)
    , ("~*", PgType.Text, PgType.Text, PgType.Boolean)
    , ("~<=~", PgType.Character, PgType.Character, PgType.Boolean)
    , ("~<=~", PgType.Text, PgType.Text, PgType.Boolean)
    , ("~<~", PgType.Character, PgType.Character, PgType.Boolean)
    , ("~<~", PgType.Text, PgType.Text, PgType.Boolean)
    , ("~>=~", PgType.Character, PgType.Character, PgType.Boolean)
    , ("~>=~", PgType.Text, PgType.Text, PgType.Boolean)
    , ("~>~", PgType.Character, PgType.Character, PgType.Boolean)
    , ("~>~", PgType.Text, PgType.Text, PgType.Boolean)
    , ("~~", PgType.Character, PgType.Text, PgType.Boolean)
    , ("~~", PgType.Text, PgType.Text, PgType.Boolean)
    , ("~~*", PgType.Character, PgType.Text, PgType.Boolean)
    , ("~~*", PgType.Text, PgType.Text, PgType.Boolean)
    , ("^", PgType.DoublePrecision, PgType.DoublePrecision, PgType.DoublePrecision)
    , ("<<", PgType.Integer, PgType.Integer, PgType.Integer)
    , (">>", PgType.Integer, PgType.Integer, PgType.Integer)
    , ("^", PgType.Numeric, PgType.Numeric, PgType.Numeric)
    , ("<<", PgType.Smallint, PgType.Integer, PgType.Smallint)
    , (">>", PgType.Smallint, PgType.Integer, PgType.Smallint)
    ]

pgUnaryOperators :: [(Operator, PgType, PgType)]
pgUnaryOperators =
    {- Generated by this query:
    select '    , ("' || op || '", PgType.' || arg || ', PgType.' || res || ')'
      from (
    select oprname as op
         , arg.pat_name as arg
         , res.pat_name as res
      from pg_operator
      join kosem_types arg on arg.toid = oprright
      join kosem_types res on res.toid = oprresult
     where oprleft = 0
    order by oprname, oprright
    )_
    -}
    [ ("+", PgType.Bigint, PgType.Bigint)
    , ("+", PgType.Smallint, PgType.Smallint)
    , ("+", PgType.Integer, PgType.Integer)
    , ("+", PgType.Real, PgType.Real)
    , ("+", PgType.DoublePrecision, PgType.DoublePrecision)
    , ("+", PgType.Numeric, PgType.Numeric)
    , ("-", PgType.Bigint, PgType.Bigint)
    , ("-", PgType.Smallint, PgType.Smallint)
    , ("-", PgType.Integer, PgType.Integer)
    , ("-", PgType.Real, PgType.Real)
    , ("-", PgType.DoublePrecision, PgType.DoublePrecision)
    , ("-", PgType.Numeric, PgType.Numeric)
    , ("@", PgType.Bigint, PgType.Bigint)
    , ("@", PgType.Smallint, PgType.Smallint)
    , ("@", PgType.Integer, PgType.Integer)
    , ("@", PgType.Real, PgType.Real)
    , ("@", PgType.DoublePrecision, PgType.DoublePrecision)
    , ("@", PgType.Numeric, PgType.Numeric)
    , ("|/", PgType.DoublePrecision, PgType.DoublePrecision)
    , ("||/", PgType.DoublePrecision, PgType.DoublePrecision)
    , ("~", PgType.Bigint, PgType.Bigint)
    , ("~", PgType.Smallint, PgType.Smallint)
    , ("~", PgType.Integer, PgType.Integer)
    , ("~", PgType.Integer, PgType.Integer)
    ]

pgFunctions :: [(Identifier, [PgType], PgType)]
pgFunctions =
    [ ("length", [PgType.Text], PgType.Integer)
    , ("replace", [PgType.Text, PgType.Text, PgType.Text], PgType.Text)
    ]

pgCast :: [PgCast]
pgCast =
    {- Generated by this query:
    select '    , (PgCast ' || src_type || ' ' || dst_type  || ' ' || cast_context || ')'
      from (
    select 'PgType.' || src.pat_name as src_type
         , 'PgType.' || dst.pat_name as dst_type
         , case castcontext
                when 'e' then 'CastContextExplicit'
                when 'a' then 'CastContextAssignment'
                when 'i' then 'CastContextImplicit'
                else 'ERROR' end as cast_context
      from pg_cast c
      join kosem_types src on c.castsource = src.toid
      join kosem_types dst on c.casttarget = dst.toid
    order by c.oid
    )_
    -}
    [ PgCast PgType.Bigint PgType.Smallint CastContextAssignment
    , PgCast PgType.Bigint PgType.Integer CastContextAssignment
    , PgCast PgType.Bigint PgType.Real CastContextImplicit
    , PgCast PgType.Bigint PgType.DoublePrecision CastContextImplicit
    , PgCast PgType.Bigint PgType.Numeric CastContextImplicit
    , PgCast PgType.Smallint PgType.Bigint CastContextImplicit
    , PgCast PgType.Smallint PgType.Integer CastContextImplicit
    , PgCast PgType.Smallint PgType.Real CastContextImplicit
    , PgCast PgType.Smallint PgType.DoublePrecision CastContextImplicit
    , PgCast PgType.Smallint PgType.Numeric CastContextImplicit
    , PgCast PgType.Integer PgType.Bigint CastContextImplicit
    , PgCast PgType.Integer PgType.Smallint CastContextAssignment
    , PgCast PgType.Integer PgType.Real CastContextImplicit
    , PgCast PgType.Integer PgType.DoublePrecision CastContextImplicit
    , PgCast PgType.Integer PgType.Numeric CastContextImplicit
    , PgCast PgType.Real PgType.Bigint CastContextAssignment
    , PgCast PgType.Real PgType.Smallint CastContextAssignment
    , PgCast PgType.Real PgType.Integer CastContextAssignment
    , PgCast PgType.Real PgType.DoublePrecision CastContextImplicit
    , PgCast PgType.Real PgType.Numeric CastContextAssignment
    , PgCast PgType.DoublePrecision PgType.Bigint CastContextAssignment
    , PgCast PgType.DoublePrecision PgType.Smallint CastContextAssignment
    , PgCast PgType.DoublePrecision PgType.Integer CastContextAssignment
    , PgCast PgType.DoublePrecision PgType.Real CastContextAssignment
    , PgCast PgType.DoublePrecision PgType.Numeric CastContextAssignment
    , PgCast PgType.Numeric PgType.Bigint CastContextAssignment
    , PgCast PgType.Numeric PgType.Smallint CastContextAssignment
    , PgCast PgType.Numeric PgType.Integer CastContextAssignment
    , PgCast PgType.Numeric PgType.Real CastContextImplicit
    , PgCast PgType.Numeric PgType.DoublePrecision CastContextImplicit
    , PgCast PgType.Integer PgType.Boolean CastContextExplicit
    , PgCast PgType.Boolean PgType.Integer CastContextExplicit
    , PgCast PgType.Text PgType.Character CastContextImplicit
    , PgCast PgType.Text PgType.CharacterVarying CastContextImplicit
    , PgCast PgType.Character PgType.Text CastContextImplicit
    , PgCast PgType.Character PgType.CharacterVarying CastContextImplicit
    , PgCast PgType.CharacterVarying PgType.Text CastContextImplicit
    , PgCast PgType.CharacterVarying PgType.Character CastContextImplicit
    , PgCast PgType.Boolean PgType.Text CastContextAssignment
    , PgCast PgType.Boolean PgType.CharacterVarying CastContextAssignment
    , PgCast PgType.Boolean PgType.Character CastContextAssignment
    , PgCast PgType.Character PgType.Character CastContextImplicit
    , PgCast PgType.CharacterVarying PgType.CharacterVarying CastContextImplicit
    , PgCast PgType.Numeric PgType.Numeric CastContextImplicit
    ]
